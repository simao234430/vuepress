{"remainingRequest":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/simao/javascript_code/vuepress/docs/java/getting-started.md?vue&type=template&id=1a63e9ea&","dependencies":[{"path":"/Users/simao/javascript_code/vuepress/docs/java/getting-started.md","mtime":1550041214207},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1550030173624}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"getting-started\\\"><a href=\\\"#getting-started\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Getting Started</h1> \"),_vm._ssrNode(\"<blockquote>\",\"</blockquote>\",[_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"There's also a \"),_vm._ssrNode(\"<a href=\\\"https://www.youtube.com/watch?v=vkAUGUlYm24&list=PLzu0PBqV2jld2q5gCADxX17NE3gF3FvYq\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"video version\"),_c('OutboundLink')],2),_vm._ssrNode(\" of this.\")],2)]),_vm._ssrNode(\" <h2 id=\\\"environmental-preparation\\\"><a href=\\\"#environmental-preparation\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Environmental preparation</h2> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"First you should have \"),_vm._ssrNode(\"<a href=\\\"https://nodejs.org/en/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"node\"),_c('OutboundLink')],2),_vm._ssrNode(\", and make sure it's version 8.10 or above.\")],2),_vm._ssrNode(\" <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ node -v\\n8.1x\\n</code></pre></div><p>Recommended to use <code>yarn</code> to management npm dependency.</p> <p>Then install <code>umi</code> globally, and make sure it's 2.0.0 or above.</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ yarn global add umi\\n$ umi -v\\n2.0.0\\n</code></pre></div><h2 id=\\\"boilerplate\\\"><a href=\\\"#boilerplate\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Boilerplate</h2> <p>First create an empty directory.</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ <span class=\\\"token function\\\">mkdir</span> myapp <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">cd</span> myapp\\n</code></pre></div><p>Then create some pages with <code>umi g</code>,</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ umi g page index\\n$ umi g page <span class=\\\"token function\\\">users</span>\\n</code></pre></div><blockquote><p><code>umi g</code> is the alias of <code>umi generate</code>, used for generate <code>component</code>, <code>page</code>, <code>layout</code> quickly. And it can be extended in plugins, such as umi-plugin-dva extended <code>dva:model</code>, then you can generate dva's model via <code>umi g dva:model foo</code>.</p></blockquote> <p>Then view the directory with <code>tree</code>, (windows users can skip this step)</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ tree\\n<span class=\\\"token keyword\\\">.</span>\\n└── pages\\n    ├── index.css\\n    ├── index.js\\n    ├── users.css\\n    └── users.js\\n</code></pre></div>\"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"The pages directory here is the directory where the page is located. In umi, all the js files under the pages are routes. It's like \"),_vm._ssrNode(\"<a href=\\\"https://github.com/zeit/next.js\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"next.js\"),_c('OutboundLink')],2),_vm._ssrNode(\" or \"),_vm._ssrNode(\"<a href=\\\"https://nuxtjs.org/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"nuxt The experience of .js\"),_c('OutboundLink')],2),_vm._ssrNode(\".\")],2),_vm._ssrNode(\" <p>Then start the local dev server,</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ umi dev\\n</code></pre></div><img src=\\\"https://gw.alipayobjects.com/zos/rmsportal/SGkKMTPMJWFnYMbyznFW.png\\\" width=\\\"616\\\"> <h2 id=\\\"convensional-routing\\\"><a href=\\\"#convensional-routing\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Convensional Routing</h2> <p>After starting <code>umi dev</code>, you will find a directory of <code>.umi</code> under pages. What is this? This is the temporary directory of umi, you can do some verification here, but please do not modify the code directly here, umi restart or file modification under pages will regenerate the files in this folder.</p> <p>Then we add some route jump code to <code>index.js</code> and <code>users.js</code>.</p> <p>First modify <code>pages/index.js</code>,</p> <div class=\\\"language-diff extra-class\\\"><pre class=\\\"language-diff\\\"><code><span class=\\\"token inserted\\\">+ import Link from 'umi/link';</span>\\nimport styles from './index.css';\\n\\nexport default function() {\\n  return (\\n    &lt;div className={styles.normal}&gt;\\n      &lt;h1&gt;Page index&lt;/h1&gt;\\n<span class=\\\"token inserted\\\">+     &lt;Link to=&quot;/users&quot;&gt;go to /users&lt;/Link&gt;</span>\\n    &lt;/div&gt;\\n  );\\n}\\n</code></pre></div><p>Then modify <code>pages/users.js</code>,</p> <div class=\\\"language-diff extra-class\\\"><pre class=\\\"language-diff\\\"><code><span class=\\\"token inserted\\\">+ import router from 'umi/router';</span>\\nimport styles from './index.css';\\n\\nexport default function() {\\n  return (\\n    &lt;div className={styles.normal}&gt;\\n      &lt;h1&gt;Page index&lt;/h1&gt;\\n<span class=\\\"token inserted\\\">+     &lt;button onClick={() =&gt; { router.goBack(); }}&gt;go back&lt;/button&gt;</span>\\n    &lt;/div&gt;\\n  );\\n}\\n</code></pre></div><p>Then verify in the browser, and it should already be able to jump between the index page and the users pages.</p> <h2 id=\\\"build-and-deploy\\\"><a href=\\\"#build-and-deploy\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Build and Deploy</h2> <h3 id=\\\"build\\\"><a href=\\\"#build\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Build</h3> <p>Run <code>umi build</code>，</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ umi build\\n\\nDONE  Compiled successfully <span class=\\\"token keyword\\\">in</span> 1729ms\\n\\nFile sizes after gzip:\\n\\n  68.04 KB  dist/umi.js\\n  83 B      dist/umi.css\\n</code></pre></div><p>The files is generated to <code>./dist</code> by default. You could view the files by the <code>tree</code> command (Windows users can skip this step)</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ tree ./dist\\n./dist\\n├── index.html\\n├── umi.css\\n└── umi.js\\n</code></pre></div><h3 id=\\\"local-verification\\\"><a href=\\\"#local-verification\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Local Verification</h3> <p>Local verification can be done via <code>serve</code> before publishing.</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ yarn global add serve\\n$ serve ./dist\\n\\nServing<span class=\\\"token operator\\\">!</span>\\n\\n- Local:            http://localhost:5000\\n- On Your Network:  http://<span class=\\\"token punctuation\\\">{</span>Your IP<span class=\\\"token punctuation\\\">}</span>:5000\\n\\nCopied local address to clipboard<span class=\\\"token operator\\\">!</span>\\n</code></pre></div><p>Visit http://localhost:5000, which should be same as <code>umi dev</code>.</p> <h3 id=\\\"deploy\\\"><a href=\\\"#deploy\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Deploy</h3> \"),_vm._ssrNode(\"<p>\",\"</p>\",[_vm._ssrNode(\"Once verified, you can deploy it. Here is a demonstration with \"),_vm._ssrNode(\"<a href=\\\"http://now.sh/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\",\"</a>\",[_vm._ssrNode(\"now\"),_c('OutboundLink')],2),_vm._ssrNode(\".\")],2),_vm._ssrNode(\" <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code>$ yarn global add now\\n$ now ./dist\\n\\n<span class=\\\"token operator\\\">&gt;</span> Deploying /private/tmp/sorrycc-1KVCmK/dist under chencheng\\n<span class=\\\"token operator\\\">&gt;</span> Synced 3 files <span class=\\\"token punctuation\\\">(</span>301.93KB<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">[</span>2s<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token operator\\\">&gt;</span> https://dist-jtckzjjatx.now.sh <span class=\\\"token punctuation\\\">[</span>in clipboard<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span>1s<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token operator\\\">&gt;</span> Deployment complete<span class=\\\"token operator\\\">!</span>\\n</code></pre></div><p>Then open the url to view it online.</p>\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}