{"remainingRequest":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/simao/javascript_code/vuepress/docs/java/router.md?vue&type=template&id=6914163c&","dependencies":[{"path":"/Users/simao/javascript_code/vuepress/docs/java/router.md","mtime":1550041214208},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1550030173624}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"router\"><a class=\"header-anchor\" href=\"#router\" aria-hidden=\"true\">#</a> Router</h1>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">TIP</p>\n<p>The routing usage described below can be found in <a href=\"https://github.com/umijs/umi-examples/tree/master/routes\" target=\"_blank\" rel=\"noopener noreferrer\">umi-examples/routes<OutboundLink/></a> and find the sample code in <a href=\"https://github.com/umijs/umi-examples/tree/master/routes-via-config\" target=\"_blank\" rel=\"noopener noreferrer\">umi-examples/routes-via-config<OutboundLink/></a>.</p>\n</div>\n<p>Umi automatically generates routing configurations based on the <code>pages</code> directory.</p>\n<h2 id=\"conventional-routing\"><a class=\"header-anchor\" href=\"#conventional-routing\" aria-hidden=\"true\">#</a> Conventional Routing</h2>\n<h3 id=\"basic-routing\"><a class=\"header-anchor\" href=\"#basic-routing\" aria-hidden=\"true\">#</a> Basic Routing</h3>\n<p>Assume that the <code>pages</code> directory structure is as follows:</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>+ pages/\n  + users/\n    - index.js\n    - list.js\n  - index.js\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Then, umi will automatically generate the routing configuration as follows:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/list'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/list.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"dynamic-routing\"><a class=\"header-anchor\" href=\"#dynamic-routing\" aria-hidden=\"true\">#</a> Dynamic Routing</h3>\n<p>As agreed in umi, directories or files with the <code>$</code> prefix are dynamic routes.</p>\n<p>For example, the following directory structure:</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>+ pages/\n  + $post/\n    - index.js\n    - comments.js\n  + users/\n    $id.js\n  - index.js\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>The routing configuration will be generated as follows:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/:id'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/$id.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/:post/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/$post/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/:post/comments'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/$post/comments.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"optional-dynamic-routing\"><a class=\"header-anchor\" href=\"#optional-dynamic-routing\" aria-hidden=\"true\">#</a> Optional Dynamic Routing</h3>\n<p>In umi, dynamic routing is an optional dynamic route if it has a <code>$</code> suffix.</p>\n<p>For example, the following structure:</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>+ pages/\n  + users/\n    - $id$.js\n  - index.js\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>The routing configuration will be generated as follows:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">:</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/:id?'</span><span class=\"token punctuation\">:</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/$id$.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"nested-routing\"><a class=\"header-anchor\" href=\"#nested-routing\" aria-hidden=\"true\">#</a> Nested Routing</h3>\n<p>When there is <code>_layout.js</code> in the umi directory, a nested route will be generated, with <code>_layout.js</code> as the layout of the directory.</p>\n<p>For example, the following directory structure:</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>+ pages/\n  + users/\n    - _layout.js\n    - $id.js\n    - index.js\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>The routing configuration will be generated as follows:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/_layout.js'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/:id'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/users/$id.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"global-layout\"><a class=\"header-anchor\" href=\"#global-layout\" aria-hidden=\"true\">#</a> Global Layout</h3>\n<p>The convention <code>src/layouts/index.js</code> is a global route, returning a React component, and rendering the child components via <code>props.children</code>.</p>\n<p>Example:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>children <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"different-global-layout\"><a class=\"header-anchor\" href=\"#different-global-layout\" aria-hidden=\"true\">#</a> Different Global Layout</h3>\n<p>You may need to output a different global layout for different routes. umi does not support such a configuration, but you can still distinguish between location.path and render different layouts in <code>layouts/index.js</code>.</p>\n<p>For example, if you want to output a simple layout for /login,</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">===</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>SimpleLayout<span class=\"token operator\">></span><span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>children <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SimpleLayout<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>children <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"_404-routing\"><a class=\"header-anchor\" href=\"#_404-routing\" aria-hidden=\"true\">#</a> 404 Routing</h3>\n<p>The convention <code>pages/404.js</code> is a 404 page and needs to return a React component.</p>\n<p>Example:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token constant\">I</span> am a customized <span class=\"token number\">404</span> page<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><blockquote>\n<p>Note: In development mode, umi will add a default 404 page to aid development, but you can still verify the 404 page by precisely accessing <code>/404</code>.</p>\n</blockquote>\n<h3 id=\"extending-routing-by-annotation\"><a class=\"header-anchor\" href=\"#extending-routing-by-annotation\" aria-hidden=\"true\">#</a> Extending Routing by Annotation</h3>\n<p>The first comment of the contracted routing file is used to extend the route if it contains a configuration in the <strong>yaml</strong> format.</p>\n<p>Example:</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>+ pages/\n  - index.js\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>If <code>pages/index.js</code> contains:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">/**\n * title: Index Page\n * Routes:\n *   - ./src/routes/a.js\n *   - ./src/routes/b.js\n */</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>A route configuration is generated:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./index.js'</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Index Page'</span><span class=\"token punctuation\">,</span>\n    Routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'./src/routes/a.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/routes/b.js'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"configuration-routing\"><a class=\"header-anchor\" href=\"#configuration-routing\" aria-hidden=\"true\">#</a> Configuration Routing</h2>\n<p>If you prefer to use a configured route, you can configure <code>routes</code>, <strong>this configuration item will not be parsed for the <code>src/pages</code> directory</strong>.</p>\n<p>Example:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/list'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./b'</span><span class=\"token punctuation\">,</span> Routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./routes/PrivateRoute.js'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./users/_layout'</span><span class=\"token punctuation\">,</span>\n      routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/detail'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./users/detail'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/users/:id'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./users/id'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>note:</p>\n<ol>\n<li>component is relative to the <code>src/pages</code> directory</li>\n</ol>\n<h2 id=\"permission-routing\"><a class=\"header-anchor\" href=\"#permission-routing\" aria-hidden=\"true\">#</a> Permission Routing</h2>\n<p>The permission routing of umi is implemented by configuring the <code>Routes</code> attribute of the route. The convention is added by the yaml annotation, and the configuration formula can be directly matched.</p>\n<p>For example, the following configuration:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/index.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/list'</span><span class=\"token punctuation\">,</span> component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./pages/list.js'</span><span class=\"token punctuation\">,</span> Routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./routes/PrivateRoute.js'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Then umi will render <code>/list</code> with <code>./routes/PrivateRoute.js</code>.</p>\n<p>Example of <code>./routes/PrivateRoute.js</code> file:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token function\">PrivateRoute</span> <span class=\"token punctuation\">(</span>routes<span class=\"token operator\">/</span>PrivateRoute<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">.</span>children <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"route-transition-effects\"><a class=\"header-anchor\" href=\"#route-transition-effects\" aria-hidden=\"true\">#</a> Route Transition Effects</h2>\n<p>There are several ways to implement route transition effects. Here is an example of <a href=\"https://github.com/reactjs/react-transition-group\" target=\"_blank\" rel=\"noopener noreferrer\">react-transition-group<OutboundLink/></a>.</p>\n<p>Install dependencies first,</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ yarn add react-transition-group\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>In the layout component (<code>layouts/index.js</code> or <code>_layout.js</code> in the pages subdirectory), wrap a subassembly with <code>TransitionGroup</code> and <code>CSSTransition</code> and use <code>location.pathname</code> as the key.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">import</span> withRouter <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/withRouter'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TransitionGroup<span class=\"token punctuation\">,</span> CSSTransition <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-transition-group\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> location <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token operator\">&lt;</span>TransitionGroup<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>CSSTransition key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span> classNames<span class=\"token operator\">=</span><span class=\"token string\">\"fade\"</span> timeout<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">300</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>CSSTransition<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TransitionGroup<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>The <code>fade</code> style used above can be defined in <code>global.css</code> under <code>src</code>:</p>\n<!--beforebegin--><div class=\"language-css extra-class\"><!--afterbegin--><pre v-pre class=\"language-css\"><code><span class=\"token selector\">.fade-enter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fade-enter.fade-enter-active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity 250ms ease-in<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"bread-crumbs\"><a class=\"header-anchor\" href=\"#bread-crumbs\" aria-hidden=\"true\">#</a> Bread Crumbs</h2>\n<p>There are many ways to implement breadcrumbs. Here is an example of <a href=\"https://github.com/icd2k3/react-router-breadcrumbs-hoc\" target=\"_blank\" rel=\"noopener noreferrer\">react-router-breadcrumbs-hoc<OutboundLink/></a>.</p>\n<p>Install dependencies first,</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ yarn add react-router-breadcrumbs-hoc\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Then implement a <code>Breakcrumbs.js</code>, such as:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">import</span> NavLink <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/navlink'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> withBreadcrumbs <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-breadcrumbs-hoc'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// More configuration please go to https://github.com/icd2k3/react-router-breadcrumbs-hoc</span>\n<span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> breadcrumb<span class=\"token punctuation\">:</span> <span class=\"token string\">'home'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/list'</span><span class=\"token punctuation\">,</span> breadcrumb<span class=\"token punctuation\">:</span> <span class=\"token string\">'List Page'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withBreadcrumbs</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> breadcrumbs <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>breadcrumbs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>breadcrumb<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>span key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>breadcrumb<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>NavLink to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>breadcrumb<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>breadcrumb<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavLink<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> breadcrumbs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>i<span class=\"token operator\">></span> <span class=\"token operator\">/</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Then introduce this React component where you need it.</p>\n<h2 id=\"enable-hash-routing\"><a class=\"header-anchor\" href=\"#enable-hash-routing\" aria-hidden=\"true\">#</a> Enable Hash Routing</h2>\n<p>Umi defaults to the Browser History. If you want to use Hash History, you need to configure:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  history<span class=\"token punctuation\">:</span> <span class=\"token string\">'hash'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"scroll-to-top\"><a class=\"header-anchor\" href=\"#scroll-to-top\" aria-hidden=\"true\">#</a> Scroll to Top</h2>\n<p>Decide whether to scroll to top in the <code>componentDidUpdate</code> of the layout component (<code>layouts/index.js</code> or the <code>_layout.js</code> in the pages subdirectory), for example:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> withRouter <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/withRouter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Layout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>location <span class=\"token operator\">!==</span> prevProps<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Layout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"reference\"><a class=\"header-anchor\" href=\"#reference\" aria-hidden=\"true\">#</a> Reference</h2>\n<ul>\n<li><a href=\"https://reacttraining.com/react-router/\" target=\"_blank\" rel=\"noopener noreferrer\">https://reacttraining.com/react-router/<OutboundLink/></a></li>\n</ul>\n</div>\n",null]}