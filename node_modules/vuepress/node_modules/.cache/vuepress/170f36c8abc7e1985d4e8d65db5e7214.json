{"remainingRequest":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/simao/javascript_code/vuepress/docs/guide/with-dva.md?vue&type=template&id=1323eecc&","dependencies":[{"path":"/Users/simao/javascript_code/vuepress/docs/guide/with-dva.md","mtime":1550041214208},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1550030173624}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"use-umi-with-dva\"><a class=\"header-anchor\" href=\"#use-umi-with-dva\" aria-hidden=\"true\">#</a> Use umi with dva</h1>\n<p>As of <code>&gt;= umi@2</code>, we recommend using <a href=\"https://github.com/umijs/umi/tree/master/packages/umi-plugin-react\" target=\"_blank\" rel=\"noopener noreferrer\">umi-plugin-react<OutboundLink/></a> for <code>dva</code> integration.</p>\n<h2 id=\"features\"><a class=\"header-anchor\" href=\"#features\" aria-hidden=\"true\">#</a> Features</h2>\n<ul>\n<li><strong>Model loading by directory</strong>, getting rid of <code>app.model</code></li>\n<li><strong>File name as namespace</strong>, <code>namespace</code> as model key will be exported by <code>umi</code></li>\n<li><strong>No manually defined router.js</strong>, <code>umi</code> will take over the router stuff, and both <code>model</code>s and <code>component</code>s can be loaded on demand</li>\n<li><strong>Built-in query-string handler</strong>, manually encoding and decoding URL are not required any more</li>\n<li><strong>Built-in dva-loading and dva-immer support</strong>, of which <code>dva-immer</code> can be enabled via configuration</li>\n<li><strong>Out of box</strong>, dependencies such as: <code>dva</code>, <code>dva-loading</code>, <code>dva-immer</code>, <code>path-to-regexp</code>, <code>object-assign</code>, <code>react</code>, <code>react-dom</code> are built in, so that you don't have to worry about them</li>\n</ul>\n<h2 id=\"usage\"><a class=\"header-anchor\" href=\"#usage\" aria-hidden=\"true\">#</a> Usage</h2>\n<p>Install via <code>yarn</code>,</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>$ yarn add umi-plugin-react\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Install via <code>npm</code>, using the command <code>npm install --save umi-plugin-react</code>.</p>\n<p>Add configuration in <code>.umirc.js</code>:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">'umi-plugin-react'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        dva<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Enable <code>dva-immer</code> for elegant reducer writing experience</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">'umi-plugin-react'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        dva<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          immer<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"registering-models\"><a class=\"header-anchor\" href=\"#registering-models\" aria-hidden=\"true\">#</a> Registering models</h2>\n<p>There are two types of models: the globally registered (global) model, and the page-level model.</p>\n<p>The global model should be defined in <code>/src/models/</code>, and can be referenced in all other pages.</p>\n<p>The page-level model should not be used in any other page.</p>\n<p>Model loading rules:</p>\n<ul>\n<li><code>src/models/**/*.js</code> are defined as global models</li>\n<li><code>src/pages/**/models/**/*.js</code> are defined as page-level models</li>\n<li>global models will be loaded along with the application; page-level models are loaded on demand while in <code>production</code> build (both will always be loaded in <code>development</code> build)</li>\n<li>page-level models can be <code>.js</code> files in <code>models/**/*.js</code> pattern</li>\n<li>page-level models can be scanned upward to app structure, For example: if you have page <code>.js</code> like <code>pages/a/b.js</code>, its page-level model shall be <code>pages/a/b/models/**/*.js</code> + <code>pages/a/models/**/*.js</code>...</li>\n<li>if <code>model.js</code> is defined, the page should be a single-file-model, which means you don't have to create <code>models</code> directory if you have only one model. So if you have <code>model.js</code> defined, all <code>.js</code> files defined in <code>models/**/*.js</code> will be ignored</li>\n</ul>\n<p>Example:</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>+ src\n  + models\n    - g.js\n  + pages\n    + a\n      + models\n        - a.js\n        - b.js\n        + ss\n          - s.js\n      - page.js\n    + c\n      - model.js\n      + d\n        + models\n          - d.js\n        - page.js\n      - page.js\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>With the above file structure:</p>\n<ul>\n<li>the global model is <code>src/models/g.js</code></li>\n<li>the page-level models for <code>/a</code> is <code>src/pages/a/models/{a,b,ss/s}.js</code></li>\n<li>the page-level model for <code>/c</code> is <code>src/pages/c/model.js</code></li>\n<li>the page-level models for <code>/c/d</code> are <code>src/pages/c/model.js, src/pages/c/d/models/d.js</code></li>\n</ul>\n<h2 id=\"configuration-and-plugins\"><a class=\"header-anchor\" href=\"#configuration-and-plugins\" aria-hidden=\"true\">#</a> Configuration and plugins</h2>\n<blockquote>\n<p>The previous configuration in <code>src/dva.js</code> has been deprecated, and will remove support in next major release.</p>\n</blockquote>\n<p>Create a new <code>app.js</code> in the <code>src</code> directory with the following contents:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> dva <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  config<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dva-logger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"faq\"><a class=\"header-anchor\" href=\"#faq\" aria-hidden=\"true\">#</a> FAQ</h2>\n<h3 id=\"page-component-is-not-re-rendered-whenever-url-changed\"><a class=\"header-anchor\" href=\"#page-component-is-not-re-rendered-whenever-url-changed\" aria-hidden=\"true\">#</a> Page component is not re-rendered whenever url changed?</h3>\n<p>If you have <code>connect</code> data in <code>layouts/index.js</code>, <code>umi/withRouter</code> is required</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">import</span> withRouter <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/withRouter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>mapStateToProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LayoutComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"how-to-access-store-or-dispatch\"><a class=\"header-anchor\" href=\"#how-to-access-store-or-dispatch\" aria-hidden=\"true\">#</a> How to access <code>store</code> or <code>dispatch</code>?</h3>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>window<span class=\"token punctuation\">.</span>g_app<span class=\"token punctuation\">.</span>_store\nwindow<span class=\"token punctuation\">.</span>g_app<span class=\"token punctuation\">.</span>_store<span class=\"token punctuation\">.</span>dispatch\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"how-to-disable-load-on-demand-for-component-and-models\"><a class=\"header-anchor\" href=\"#how-to-disable-load-on-demand-for-component-and-models\" aria-hidden=\"true\">#</a> How to disable load on demand for <code>component</code> and <code>models</code>?</h3>\n<p>Add config to <code>.umirc.js</code>:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">'umi-plugin-react'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        dva<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          dynamicImport<span class=\"token punctuation\">:</span> undefined <span class=\"token comment\">// config in dva</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        dynamicImport<span class=\"token punctuation\">:</span> undefined   <span class=\"token comment\">// root config will be inherited as well</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"page-component-is-not-re-rendered-whenever-url-is-changed-while-connect-data-in-layout\"><a class=\"header-anchor\" href=\"#page-component-is-not-re-rendered-whenever-url-is-changed-while-connect-data-in-layout\" aria-hidden=\"true\">#</a> Page component is not re-rendered whenever url is changed while <code>connect</code> data in <code>layout</code></h3>\n<p>Check the order of <code>connect</code>, <code>withRouter</code> usage</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">import</span> withRouter <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/withRouter'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Layout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"references\"><a class=\"header-anchor\" href=\"#references\" aria-hidden=\"true\">#</a> References</h2>\n<ul>\n<li><a href=\"https://github.com/sorrycc/blog/issues/66\" target=\"_blank\" rel=\"noopener noreferrer\">Improve dva project with umi<OutboundLink/></a></li>\n<li><a href=\"https://github.com/sorrycc/blog/issues/62\" target=\"_blank\" rel=\"noopener noreferrer\">umi + dva, write your own user-management CURD app<OutboundLink/></a></li>\n</ul>\n</div>\n",null]}