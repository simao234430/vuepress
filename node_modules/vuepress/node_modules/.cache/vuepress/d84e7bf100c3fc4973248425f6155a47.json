{"remainingRequest":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/simao/javascript_code/vuepress/docs/java/runtime-config.md?vue&type=template&id=0bc51dff&","dependencies":[{"path":"/Users/simao/javascript_code/vuepress/docs/java/runtime-config.md","mtime":1550041214208},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1550030168216},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vue-loader/lib/index.js","mtime":1550030169776},{"path":"/Users/simao/javascript_code/vuepress/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1550030173624}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"runtime-config\"><a class=\"header-anchor\" href=\"#runtime-config\" aria-hidden=\"true\">#</a> Runtime Config</h1>\n<div class=\"warning custom-block\"><p class=\"custom-block-title\">WARNING</p>\n<p>This article has not been translated yet. Wan't to help us out? Click the <code>Edit this page on GitHub</code> at the end of the page.</p>\n</div>\n<h2 id=\"为什么有运行时配置？\"><a class=\"header-anchor\" href=\"#为什么有运行时配置？\" aria-hidden=\"true\">#</a> 为什么有运行时配置？</h2>\n<p>我们通过 <code>.umirc.js</code> 做编译时的配置，这能覆盖大量场景，但有一些却是编译时很难触及的。</p>\n<p>比如：</p>\n<ul>\n<li>在出错时显示个 message 提示用户</li>\n<li>在加载和路由切换时显示个 loading</li>\n<li>页面载入完成时请求后端，根据响应动态修改路由</li>\n</ul>\n<p>这些在编译时就很难处理，或者不能处理了。</p>\n<h2 id=\"配置方式\"><a class=\"header-anchor\" href=\"#配置方式\" aria-hidden=\"true\">#</a> 配置方式</h2>\n<p>umi 约定 <code>src</code> 目录下的 <code>app.js</code> 为运行时的配置文件。</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>+ src\n  - app.js      <span class=\"token comment\"># 运行时配置文件</span>\n- package.json\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"配置列表\"><a class=\"header-anchor\" href=\"#配置列表\" aria-hidden=\"true\">#</a> 配置列表</h2>\n<h3 id=\"patchroutes\"><a class=\"header-anchor\" href=\"#patchroutes\" aria-hidden=\"true\">#</a> patchRoutes</h3>\n<p>用于运行时修改路由。</p>\n<p>参数：</p>\n<ul>\n<li>routes: <code>Array</code>，路由配置</li>\n</ul>\n<p>e.g. 添加一个 <code>/foo</code> 的路由，</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">patchRoutes</span><span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  routes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/foo'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>可能的场景：</p>\n<ul>\n<li>和 <code>render</code> 配合使用，请求服务端根据响应动态更新路由</li>\n<li>修改全部路由，加上某个前缀</li>\n<li>...</li>\n</ul>\n<p>注：</p>\n<ol>\n<li>同样适用约定式路由</li>\n<li>直接修改 <code>routes</code> 就好，不要返回新的路由对象</li>\n</ol>\n<h3 id=\"render\"><a class=\"header-anchor\" href=\"#render\" aria-hidden=\"true\">#</a> render</h3>\n<p>用于改写把整个应用 render 到 dom 数里的方法。</p>\n<p>参数：</p>\n<ul>\n<li>oldRender， <code>Function</code>，原始 render 方法，需至少被调用一次</li>\n</ul>\n<p>e.g. 延迟 1s 渲染应用，</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>oldRender<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>oldRender<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>可能的场景：</p>\n<ol>\n<li>渲染应用之前做权限校验，不通过则跳转到登录页</li>\n</ol>\n<h3 id=\"onroutechange\"><a class=\"header-anchor\" href=\"#onroutechange\" aria-hidden=\"true\">#</a> onRouteChange</h3>\n<p>用于在初始加载和路由切换时做一些事情。</p>\n<p>参数：</p>\n<ul>\n<li>Object\n<ul>\n<li>location：<code>Object</code>, history 提供的 location 对象</li>\n<li>routes: <code>Array</code>, 路由配置</li>\n<li>action: <code>PUSH|POP|REPLACE|undefined</code>，初次加载时为 <code>undefined</code></li>\n</ul>\n</li>\n</ul>\n<p>e.g.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onRouteChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> location<span class=\"token punctuation\">,</span> routes<span class=\"token punctuation\">,</span> action <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">bacon</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>可能的场景：</p>\n<ol>\n<li>埋点统计</li>\n</ol>\n<p>注：</p>\n<ol>\n<li>初次加载时也会执行，但 action 为 <code>undefined</code></li>\n</ol>\n<h3 id=\"rootcontainer\"><a class=\"header-anchor\" href=\"#rootcontainer\" aria-hidden=\"true\">#</a> rootContainer</h3>\n<p>用于封装 root container，可以取一部分，或者外面套一层，等等。</p>\n<p>参数：</p>\n<ul>\n<li>container，<code>ReactComponent</code>，React 应用最上层的根组件</li>\n</ul>\n<p>e.g.</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">rootContainer</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> DvaContainer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@tmp/DvaContainer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>DvaContainer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>可能的场景：</p>\n<ol>\n<li>dva、intl 等需要在外层有个 Provider 的场景</li>\n</ol>\n<h3 id=\"modifyrouteprops\"><a class=\"header-anchor\" href=\"#modifyrouteprops\" aria-hidden=\"true\">#</a> modifyRouteProps</h3>\n<p>修改传给路由组件的 props。</p>\n<p>参数：</p>\n<ul>\n<li>\n<p>props，<code>Object</code>，原始 props</p>\n</li>\n<li>\n<p>Object</p>\n<ul>\n<li>route，<code>Object</code>，当前路由配置</li>\n</ul>\n</li>\n</ul>\n<p>e.g.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">modifyRouteProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> route <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>props<span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>注：</p>\n<ol>\n<li>需返回新的 props</li>\n</ol>\n</div>\n",null]}